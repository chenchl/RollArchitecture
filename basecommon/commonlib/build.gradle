apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
        consumerProguardFiles 'consumer-rules.pro'
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api rootProject.ext.dependencies["appcompatx"]
    api rootProject.ext.dependencies["appcompatxdesign"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["MMKV"]
    api rootProject.ext.httpDependencies["rxjava"]
    api rootProject.ext.httpDependencies["rxandroid"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["autoDispose"]
    api rootProject.ext.dependencies["autoDisposeArchcomponents"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
}
